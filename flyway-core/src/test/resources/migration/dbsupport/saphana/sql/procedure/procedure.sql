-- just to have one statement before the actual test statement
CREATE VIEW all_misters AS SELECT * FROM test_user WHERE name LIKE 'Mr.%';

-- create statement with embedded ';'
-- it is expected that this statement is read as a single statement ending after 'END;'
-- and not broken into separate statements ending after each ';' withing the BEGIN...END-block.
CREATE PROCEDURE GET_VARIANTS_DETECTED_TO_KNOWN_IDENTITY_CVI_MATCH(OUT VARIANTS_DETECTED_TO_KNOWN_IDENTITY_CVI_MATCH TT_IDENTITY_CVI_MATCHES)
LANGUAGE SQLSCRIPT
READS SQL DATA WITH RESULT VIEW VARIANTS_DETECTED_TO_KNOWN_IDENTITY_CVI_MATCH AS
BEGIN

  SRC_DATA = SELECT * FROM RELATED_CVIS;

  SRC_CVI =
  -- match branch 1
  SELECT DISTINCT
    CASE_UUID,
    DETECTED_VAR_ID,
    DETECTED_LINEAGE,
    VARIANT_ID AS KNOWN_VARIANT_ID,
    VARIANT_SRC_OU AS KNOWN_VARIANT_SRC_OU,
    KNOWN_LINEAGE,
    CBI_ID,
    CBI_SRC_OU,
    CBI_IMPACT,
    CBI_DISEASE_ID,
    PT_DISEASE_ID,
    DISEASE_MATCH_EXACT
    FROM
      :SRC_DATA
    WHERE SPECIFICITY = 'exact'
    AND COALESCE(DETECTED_POSITION_FROM, 0) = COALESCE(KNOWN_POSITION_FROM, 0)
    AND COALESCE(DETECTED_POSITION_TO, 0) = COALESCE(KNOWN_POSITION_TO, 0)
    AND COALESCE(DETECTED_ALTERNATE_PART, '') = COALESCE(KNOWN_ALTERNATE_PART, '')
  ;

-- match branch 2
  SRC_CVI =
  SELECT * FROM :SRC_CVI
  UNION ALL (
    SELECT DISTINCT
    CASE_UUID,
    DETECTED_VAR_ID,
    DETECTED_LINEAGE,
    VARIANT_ID AS KNOWN_VARIANT_ID,
    VARIANT_SRC_OU AS KNOWN_VARIANT_SRC_OU,
    KNOWN_LINEAGE,
    CBI_ID,
    CBI_SRC_OU,
    CBI_IMPACT,
    CBI_DISEASE_ID,
    PT_DISEASE_ID,
    DISEASE_MATCH_EXACT
    FROM
      :SRC_DATA
    WHERE
      SPECIFICITY = 'exact position'
      AND COALESCE(DETECTED_POSITION_FROM, 0) = COALESCE(KNOWN_POSITION_FROM, 0)
      AND COALESCE(DETECTED_POSITION_TO, 0) = COALESCE(KNOWN_POSITION_TO, 0)
      -- and not yet a better match for that DETECTED_VAR_ID/IMPACT
      AND (DETECTED_VAR_ID, IMPACT_ID) NOT IN (
        SELECT DETECTED_VAR_ID, IMPACT_ID FROM :SRC_CVI
      )
  );

-- match branch 3
  SRC_CVI =
  SELECT * FROM :SRC_CVI
  UNION ALL (
    SELECT DISTINCT
    CASE_UUID,
    DETECTED_VAR_ID,
    DETECTED_LINEAGE,
    VARIANT_ID AS KNOWN_VARIANT_ID,
    VARIANT_SRC_OU AS KNOWN_VARIANT_SRC_OU,
    KNOWN_LINEAGE,
    CBI_ID,
    CBI_SRC_OU,
    CBI_IMPACT,
    CBI_DISEASE_ID,
    PT_DISEASE_ID,
    DISEASE_MATCH_EXACT
    FROM
      :SRC_DATA
    WHERE
      SPECIFICITY = 'exon'
      AND COALESCE(DETECTED_POSITION_FROM, 0) BETWEEN COALESCE(KNOWN_POSITION_FROM, 0) AND COALESCE(KNOWN_POSITION_TO, 0)
      AND COALESCE(DETECTED_POSITION_TO, 0) BETWEEN COALESCE(KNOWN_POSITION_FROM, 0) AND COALESCE(KNOWN_POSITION_TO, 0)
      -- and not yet a better match for that DETECTED_VAR_ID/IMPACT
      AND (DETECTED_VAR_ID, IMPACT_ID) NOT IN (
        SELECT DETECTED_VAR_ID, IMPACT_ID FROM :SRC_CVI
      )
  );

-- match branch 4
  SRC_CVI =
  SELECT * FROM :SRC_CVI
  UNION ALL (
    SELECT DISTINCT
    CASE_UUID,
    DETECTED_VAR_ID,
    DETECTED_LINEAGE,
    VARIANT_ID AS KNOWN_VARIANT_ID,
    VARIANT_SRC_OU AS KNOWN_VARIANT_SRC_OU,
    KNOWN_LINEAGE,
    CBI_ID,
    CBI_SRC_OU,
    CBI_IMPACT,
    CBI_DISEASE_ID,
    PT_DISEASE_ID,
    DISEASE_MATCH_EXACT
    FROM
      :SRC_DATA
    WHERE
      SPECIFICITY = 'protein'
      AND COALESCE(DETECTED_POSITION_FROM, 0) BETWEEN COALESCE(KNOWN_POSITION_FROM, 0) AND COALESCE(KNOWN_POSITION_TO, 0)
      -- and not yet a better match for that DETECTED_VAR_ID/IMPACT
      AND (DETECTED_VAR_ID, IMPACT_ID) NOT IN (
        SELECT DETECTED_VAR_ID, IMPACT_ID FROM :SRC_CVI
      )
  );

-- match branch 5
  SRC_CVI =
  SELECT * FROM :SRC_CVI
  UNION ALL (
    SELECT DISTINCT
    CASE_UUID,
    DETECTED_VAR_ID,
    DETECTED_LINEAGE,
    VARIANT_ID AS KNOWN_VARIANT_ID,
    VARIANT_SRC_OU AS KNOWN_VARIANT_SRC_OU,
    KNOWN_LINEAGE,
    CBI_ID,
    CBI_SRC_OU,
    CBI_IMPACT,
    CBI_DISEASE_ID,
    PT_DISEASE_ID,
    DISEASE_MATCH_EXACT
    FROM
      :SRC_DATA
    WHERE
      SPECIFICITY = 'gene'
      AND COALESCE(DETECTED_POSITION_FROM, 0) BETWEEN COALESCE(KNOWN_POSITION_FROM, 0) AND COALESCE(KNOWN_POSITION_TO, 0)
      AND DETECTED_ALTERNATE_PART = KNOWN_ALTERNATE_PART
      -- and not yet a better match for that DETECTED_VAR_ID/IMPACT
      AND (DETECTED_VAR_ID, IMPACT_ID) NOT IN (
        SELECT DETECTED_VAR_ID, IMPACT_ID FROM :SRC_CVI
      )
  );

  VARIANTS_DETECTED_TO_KNOWN_IDENTITY_CVI_MATCH = SELECT * FROM :SRC_CVI;
END;

-- just to have a trailing statement for testing
DROP VIEW all_misters;